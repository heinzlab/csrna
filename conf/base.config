/*
 * -------------------------------------------------
 *  Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */

singularity {
  enabled = true
  autoMounts = true
}

process {

  container ='shub://heinzlab/chip-seq-pipeline:latest'

  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'terminate' }
  maxRetries = 3
  maxErrors = '-1'

  // Resource requirements
  withName:bbduk {
    cpus = { check_max( 2 * task.attempt, 'cpus' ) }
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withName:bwa {
    cpus = { check_max( 8 * task.attempt, 'cpus' ) }
    memory = { check_max( 64.GB * task.attempt, 'memory' ) }
    time = { check_max( 24.h * task.attempt, 'time' ) }
  }
  withName:samtools {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withName:bwa_mapped {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withName:picard {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withName:ssp {
    cpus = { check_max ( 2 * task.attempt, 'cpus') }
    memory = { check_max( 32.GB * task.attempt, 'memory') }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withName:countstat {
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withName:deepTools {
    cpus = { check_max( 50 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withName:multiqc {
    memory = { check_max( 2.GB * task.attempt, 'memory' ) }
  }
}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 700.GB
  max_cpus = 56
  max_time = 240.h
  igenomes_base = '/gpfs/data01/heinzlab/home/cag104/reference_data/'
  //igenomes_base = 's3://ngi-igenomes/igenomes/'
}
